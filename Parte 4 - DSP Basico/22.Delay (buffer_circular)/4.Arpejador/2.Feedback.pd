#N canvas 41 70 545 626 10;
#X obj 747 97 loadbang;
#X obj 120 489 output~;
#X obj 102 332 tof/breakpoints~ 100 50;
#X obj 114 277 loadbang;
#X msg 114 301 0 0.33 1 0.34 1 0.33 0;
#X floatatom 54 268 5 0 0 0 - - -;
#X obj 57 247 hsl 128 15 0.1 5 1 0 empty LFO empty -2 -8 0 10 -261682
-1 -1 10108 1;
#X obj 266 397 line~;
#X obj 148 417 *~;
#X obj 269 320 hsl 128 15 10 500 0 0 empty depth empty -2 -8 0 10 -204800
-1 -1 389 1;
#X obj 266 348 nbx 5 14 -1e+37 1e+37 0 0 empty empty empty 0 -8 0 10
-228856 -1 -1 25.0087 256;
#X msg 266 372 \$1 100;
#X obj 332 534 delwrite~ \$0-delay 2000;
#X text 21 245 LFO;
#X text 225 346 depth;
#X text 28 267 Hz;
#X msg 747 124 \; pd dsp 1 \; LFO 2.25 \; depth 25;
#X obj 332 502 +~;
#X obj 347 478 *~;
#X obj 404 423 hsl 128 15 -0.999 0.999 0 0 empty empty empty -2 -8
0 10 -261682 -1 -1 0 1;
#X text 440 421 Feedback;
#X obj 646 264 readsf~;
#X obj 646 207 loadbang;
#X obj 603 132 line~;
#X obj 538 137 *~;
#X obj 606 55 hsl 128 15 10 500 0 0 empty depth empty -2 -8 0 10 -204800
-1 -1 389 1;
#X obj 603 83 nbx 5 14 -1e+37 1e+37 0 0 empty empty empty 0 -8 0 10
-228856 -1 -1 25.0087 256;
#X msg 603 107 \$1 100;
#X text 666 81 depth;
#X obj 646 398 +~;
#X obj 661 374 *~;
#X obj 450 175 vsl 15 128 0 1 0 0 empty empty empty 0 -9 0 10 -228856
-1 -1 9598 1;
#X obj 450 144 unsig~ 1;
#X obj 450 75 expr~ $v1 * 0.5 + 0.5;
#X obj 450 45 noisi~ 1;
#X obj 704 446 delwrite~ \$0-delay2 2000;
#X floatatom 450 23 5 0 0 0 - - -;
#X text 419 22 LFO;
#X obj 54 292 phasor~;
#X obj 663 290 s~ \$0-in;
#X obj 558 167 s~ \$0-lfo;
#X obj 538 201 vd~ \$0-delay2;
#X obj 148 444 vd~ \$0-delay;
#X obj 617 461 output~;
#X obj 948 375 output~;
#X obj 1035 305 line~;
#X obj 988 276 *~;
#X obj 1038 228 hsl 128 15 10 500 0 0 empty depth empty -2 -8 0 10
-204800 -1 -1 389 1;
#X obj 1035 256 nbx 5 14 -1e+37 1e+37 0 0 empty empty empty 0 -8 0
10 -228856 -1 -1 25.0087 256;
#X msg 1035 280 \$1 100;
#X obj 1104 256 hsl 128 15 -0.999 0.999 0 0 empty empty empty -2 -8
0 10 -261682 -1 -1 0 1;
#X text 1137 255 Feedback;
#X obj 988 196 expr~ $v1 * 0.5 + 0.5;
#X obj 988 166 noisi~ 1;
#X floatatom 988 144 5 0 0 0 - - -;
#X obj 1101 326 line~;
#X obj 1101 277 nbx 5 14 -1e+37 1e+37 0 0 empty empty empty 0 -8 0
10 -228856 -1 -1 0 256;
#X msg 1101 301 \$1 100;
#X text 1075 227 Depth;
#X text 954 144 Rate;
#X text 847 60 Mais uma vez \, esse tipo de patch pode ser razoavelmente
bem simplificado com a adoção de um objeto [comb~]. Veja abaixo:;
#X obj 962 337 comb~ 2000 0 1 0 1;
#X text 890 467 Nesta seção \, além de técnicas de Pitch Shiffting
com delay variável \, veremos também técnicas com granulação \, como
a seguir!;
#X text 31 22 Temos abaixo um processamento similar ao exemplo anterior.
Porém \, temos agora um feedback no delay que \, ao realimentar o sinal
\, gera um efeito meio psicodélico em que o pitch shiffting vai se
repetindo e acumulando. O feedback pode ser negativo também \, para
inverter a polaridade do sinal.;
#X msg 646 232 open ../../../samples/violin.wav \, 1;
#X obj 332 408 r~ \$0-in;
#X obj 880 141 r~ \$0-in;
#X obj 698 387 line~;
#X msg 698 362 \$1 100;
#X obj 401 489 line~;
#X msg 401 464 \$1 100;
#X floatatom 401 442 0 0 0 0 - - -;
#X floatatom 698 340 0 0 0 0 - - -;
#X obj 701 319 hsl 128 15 -0.999 0.999 0 0 empty empty empty -2 -8
0 10 -261682 -1 -1 0 1;
#X text 734 318 Feedback;
#X text 30 103 Podemos usar um random LFO (como o [noisi~] ao lado)
como gerador de rampas aleatóreas \, de modo que cada novo valor aleatóreo
gerado define um intervalo diferente e randômico em um "arpejador".
Igualmente \, temos um controle de feedback. Dependendo dos valores
dos parâmetros \, você pode perceber características de flanger \,
isso é porque \, como deve perceber \, a implementação é quase a mesma!
;
#X connect 0 0 16 0;
#X connect 2 0 8 0;
#X connect 3 0 4 0;
#X connect 4 0 2 0;
#X connect 5 0 38 0;
#X connect 6 0 5 0;
#X connect 7 0 8 1;
#X connect 8 0 42 0;
#X connect 9 0 10 0;
#X connect 10 0 11 0;
#X connect 11 0 7 0;
#X connect 17 0 12 0;
#X connect 18 0 17 1;
#X connect 19 0 71 0;
#X connect 21 0 29 0;
#X connect 21 0 39 0;
#X connect 21 1 64 0;
#X connect 22 0 64 0;
#X connect 23 0 24 1;
#X connect 24 0 40 0;
#X connect 24 0 41 0;
#X connect 25 0 26 0;
#X connect 26 0 27 0;
#X connect 27 0 23 0;
#X connect 29 0 35 0;
#X connect 29 0 43 1;
#X connect 29 0 43 0;
#X connect 30 0 29 1;
#X connect 32 0 31 0;
#X connect 33 0 32 0;
#X connect 33 0 24 0;
#X connect 34 0 33 0;
#X connect 36 0 34 0;
#X connect 38 0 2 0;
#X connect 41 0 30 0;
#X connect 42 0 1 0;
#X connect 42 0 1 1;
#X connect 42 0 18 0;
#X connect 45 0 46 1;
#X connect 46 0 61 1;
#X connect 47 0 48 0;
#X connect 48 0 49 0;
#X connect 49 0 45 0;
#X connect 50 0 56 0;
#X connect 52 0 46 0;
#X connect 53 0 52 0;
#X connect 54 0 53 0;
#X connect 55 0 61 4;
#X connect 56 0 57 0;
#X connect 57 0 55 0;
#X connect 61 0 44 0;
#X connect 61 0 44 1;
#X connect 64 0 21 0;
#X connect 65 0 17 0;
#X connect 66 0 61 0;
#X connect 67 0 30 1;
#X connect 68 0 67 0;
#X connect 69 0 18 1;
#X connect 70 0 69 0;
#X connect 71 0 70 0;
#X connect 72 0 68 0;
#X connect 73 0 72 0;
