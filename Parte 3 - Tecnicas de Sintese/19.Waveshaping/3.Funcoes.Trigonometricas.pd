#N canvas 118 23 1156 696 10;
#X obj 231 502 cnv 15 198 138 empty empty empty 20 12 0 14 -203904
-66577 0;
#N canvas 0 22 450 300 (subpatch) 0;
#X array waveshaping 441 float 1;
#A 0 8.59499e-06 8.59499e-06 8.59499e-06 8.59499e-06 8.59499e-06 8.59499e-06
8.59499e-06 8.59499e-06 8.59499e-06 8.59499e-06 8.59499e-06 8.59499e-06
8.59499e-06 8.59499e-06 8.59499e-06 8.59499e-06 8.59499e-06 8.59499e-06
8.59499e-06 8.59499e-06 8.59499e-06 8.59499e-06 8.59499e-06 8.59499e-06
8.59499e-06 8.59499e-06 8.59499e-06 8.59499e-06 8.59499e-06 8.59499e-06
8.59499e-06 8.59499e-06 8.59499e-06 8.59499e-06 8.59499e-06 8.59499e-06
8.59499e-06 8.59499e-06 8.59499e-06 8.59499e-06 8.59499e-06 8.59499e-06
8.59499e-06 8.59499e-06 8.59499e-06 8.59499e-06 8.59499e-06 8.59499e-06
8.59499e-06 8.59499e-06 8.59499e-06 8.59499e-06 8.59499e-06 8.59499e-06
8.59499e-06 8.59499e-06 8.59499e-06 8.59499e-06 8.59499e-06 8.59499e-06
8.59499e-06 8.59499e-06 8.59499e-06 8.59499e-06 8.59499e-06 8.59499e-06
8.59499e-06 8.59499e-06 8.59499e-06 8.59499e-06 8.59499e-06 8.59499e-06
8.59499e-06 8.59499e-06 8.59499e-06 8.59499e-06 8.59499e-06 8.59499e-06
8.59499e-06 8.59499e-06 8.59499e-06 8.59499e-06 8.59499e-06 8.59499e-06
8.59499e-06 8.59499e-06 8.59499e-06 8.59499e-06 8.59499e-06 8.59499e-06
8.59499e-06 8.59499e-06 8.59499e-06 8.59499e-06 8.59499e-06 8.59499e-06
8.59499e-06 8.59499e-06 8.59499e-06 8.59499e-06 8.59499e-06 8.59499e-06
8.59499e-06 8.59499e-06 8.59499e-06 8.59499e-06 8.59499e-06 8.59499e-06
8.59499e-06 8.59499e-06 8.59499e-06 8.59499e-06 8.59499e-06 8.59499e-06
8.59499e-06 8.59499e-06 8.59499e-06 8.59499e-06 8.59499e-06 8.59499e-06
8.59499e-06 8.59499e-06 8.59499e-06 8.59499e-06 8.59499e-06 8.59499e-06
8.59499e-06 8.59499e-06 8.59499e-06 8.59499e-06 8.59499e-06 8.59499e-06
8.59499e-06 8.59499e-06 8.59499e-06 8.59499e-06 8.59499e-06 8.59499e-06
8.59499e-06 8.59499e-06 8.59499e-06 8.59499e-06 8.59499e-06 8.59499e-06
8.59499e-06 8.59499e-06 8.59499e-06 8.59499e-06 8.59499e-06 8.59499e-06
8.59499e-06 8.59499e-06 8.59499e-06 8.59499e-06 8.59499e-06 8.59499e-06
8.59499e-06 8.59499e-06 8.59499e-06 8.59499e-06 8.59499e-06 8.59499e-06
8.59499e-06 8.59499e-06 8.59499e-06 8.59499e-06 8.59499e-06 8.59499e-06
8.59499e-06 8.59499e-06 8.59499e-06 8.59499e-06 8.59499e-06 8.59499e-06
8.59499e-06 8.59499e-06 8.59499e-06 8.59499e-06 8.59499e-06 8.59499e-06
8.59499e-06 8.59499e-06 8.59499e-06 8.59499e-06 8.59499e-06 8.59499e-06
8.59499e-06 8.59499e-06 8.59499e-06 8.59499e-06 8.59499e-06 8.59499e-06
8.59499e-06 8.59499e-06 8.59499e-06 8.59499e-06 8.59499e-06 8.59499e-06
8.59499e-06 8.59499e-06 8.59499e-06 8.59499e-06 8.59499e-06 8.59499e-06
8.59499e-06 8.59499e-06 8.59499e-06 8.59499e-06 8.59499e-06 8.59499e-06
8.59499e-06 8.59499e-06 8.59499e-06 8.59499e-06 8.59499e-06 8.59499e-06
8.59499e-06 8.59499e-06 8.59499e-06 8.59499e-06 8.59499e-06 8.59499e-06
8.59499e-06 8.59499e-06 8.59499e-06 8.59499e-06 8.59499e-06 8.59499e-06
8.59499e-06 8.59499e-06 8.59499e-06 8.59499e-06 8.59499e-06 8.59499e-06
8.59499e-06 8.59499e-06 8.59499e-06 8.59499e-06 8.59499e-06 8.59499e-06
8.59499e-06 8.59499e-06 8.59499e-06 8.59499e-06 8.59499e-06 8.59499e-06
8.59499e-06 8.59499e-06 8.59499e-06 8.59499e-06 8.59499e-06 8.59499e-06
8.59499e-06 8.59499e-06 8.59499e-06 8.59499e-06 8.59499e-06 8.59499e-06
8.59499e-06 8.59499e-06 8.59499e-06 8.59499e-06 8.59499e-06 8.59499e-06
8.59499e-06 8.59499e-06 8.59499e-06 8.59499e-06 8.59499e-06 8.59499e-06
8.59499e-06 8.59499e-06 8.59499e-06 8.59499e-06 8.59499e-06 8.59499e-06
8.59499e-06 8.59499e-06 8.59499e-06 8.59499e-06 8.59499e-06 8.59499e-06
8.59499e-06 8.59499e-06 8.59499e-06 8.59499e-06 8.59499e-06 8.59499e-06
8.59499e-06 8.59499e-06 8.59499e-06 8.59499e-06 8.59499e-06 8.59499e-06
8.59499e-06 8.59499e-06 8.59499e-06 8.59499e-06 8.59499e-06 8.59499e-06
8.59499e-06 8.59499e-06 8.59499e-06 8.59499e-06 8.59499e-06 8.59499e-06
8.59499e-06 8.59499e-06 8.59499e-06 8.59499e-06 8.59499e-06 8.59499e-06
8.59499e-06 8.59499e-06 8.59499e-06 8.59499e-06 8.59499e-06 8.59499e-06
8.59499e-06 8.59499e-06 8.59499e-06 8.59499e-06 8.59499e-06 8.59499e-06
8.59499e-06 8.59499e-06 8.59499e-06 8.59499e-06 8.59499e-06 8.59499e-06
8.59499e-06 8.59499e-06 8.59499e-06 8.59499e-06 8.59499e-06 8.59499e-06
8.59499e-06 8.59499e-06 8.59499e-06 8.59499e-06 8.59499e-06 8.59499e-06
8.59499e-06 8.59499e-06 8.59499e-06 8.59499e-06 8.59499e-06 8.59499e-06
8.59499e-06 8.59499e-06 8.59499e-06 8.59499e-06 8.59499e-06 8.59499e-06
8.59499e-06 8.59499e-06 8.59499e-06 8.59499e-06 8.59499e-06 8.59499e-06
8.59499e-06 8.59499e-06 8.59499e-06 8.59499e-06 8.59499e-06 8.59499e-06
8.59499e-06 8.59499e-06 8.59499e-06 8.59499e-06 8.59499e-06 8.59499e-06
8.59499e-06 8.59499e-06 8.59499e-06 8.59499e-06 8.59499e-06 8.59499e-06
8.59499e-06 8.59499e-06 8.59499e-06 8.59499e-06 8.59499e-06 8.59499e-06
8.59499e-06 8.59499e-06 8.59499e-06 8.59499e-06 8.59499e-06 8.59499e-06
8.59499e-06 8.59499e-06 8.59499e-06 8.59499e-06 8.59499e-06 8.59499e-06
8.59499e-06 8.59499e-06 8.59499e-06 8.59499e-06 8.59499e-06 8.59499e-06
8.59499e-06 8.59499e-06 8.59499e-06 8.59499e-06 8.59499e-06 8.59499e-06
8.59499e-06 8.59499e-06 8.59499e-06 8.59499e-06 8.59499e-06 8.59499e-06
8.59499e-06 8.59499e-06 8.59499e-06 8.59499e-06 8.59499e-06 8.59499e-06
8.59499e-06 8.59499e-06 8.59499e-06 8.59499e-06 8.59499e-06 8.59499e-06
8.59499e-06 8.59499e-06 8.59499e-06 8.59499e-06 8.59499e-06 8.59499e-06
8.59499e-06 8.59499e-06 8.59499e-06 8.59499e-06 8.59499e-06 8.59499e-06
8.59499e-06 8.59499e-06 8.59499e-06;
#X coords 0 1.1 440 -1.1 200 140 1;
#X restore 230 501 graph;
#X text 216 496 1;
#X text 210 628 -1;
#X text 216 563 0;
#X obj 38 547 cnv 15 100 40 empty empty empty 20 12 0 14 -233017 -66577
0;
#X text 83 559 Função;
#X obj 109 210 cnv 15 100 40 empty empty empty 20 12 0 14 -233017 -66577
0;
#X obj 118 170 *~;
#X obj 190 179 line~;
#X obj 193 111 hsl 128 15 0 10 0 0 empty empty empty -2 -8 0 10 -261234
-1 -1 0 1;
#X obj 190 133 nbx 5 14 -1e+37 1e+37 0 0 empty empty empty 0 -8 0 10
-261234 -1 -1 0 256;
#X text 155 222 Função;
#X obj 118 222 tanh~;
#X obj 118 134 osc~ 400;
#X obj 49 508 *~;
#X obj 144 516 line~;
#X obj 147 448 hsl 128 15 0 4 0 0 empty empty empty -2 -8 0 10 -261234
-1 -1 0 1;
#X obj 144 470 nbx 5 14 -1e+37 1e+37 0 0 empty empty empty 0 -8 0 10
-261234 -1 -1 0 256;
#N canvas 301 34 916 667 plot 0;
#X obj 135 135 metro 441;
#X obj 135 84 loadbang;
#X obj 135 111 tgl 15 0 empty empty empty 17 7 0 10 -203904 -1 -1 1
1;
#X obj 205 190 tabwrite~ waveshaping;
#X obj 237 127 catch~ \$0-out;
#X obj 74 355 loadbang;
#X obj 74 380 delay 500;
#X msg 153 410 0;
#X obj 90 432 phasor~ 200;
#X obj 90 490 asin~;
#X obj 90 462 triangle~ 1;
#X obj 74 524 tabwrite~ asin;
#X obj 288 522 tanh~;
#X msg 351 432 0;
#X obj 288 454 phasor~ 100;
#X obj 272 556 tabwrite~ tanh;
#X msg 387 421 \; pd dsp 1;
#X obj 272 371 trigger bang bang;
#X obj 272 347 loadbang;
#X obj 272 392 delay 500;
#X obj 288 476 expr~ ($v1 * 15.2) - 7.6;
#X obj 532 374 loadbang;
#X obj 532 513 tabwrite~ sin;
#X obj 532 399 delay 500;
#X msg 611 429 0;
#X obj 548 479 sin~;
#X obj 548 451 phasor~ 200;
#X obj 700 400 loadbang;
#X obj 700 425 delay 500;
#X msg 779 455 0;
#X obj 716 505 cos~;
#X obj 700 539 tabwrite~ cos;
#X obj 716 477 phasor~ 200;
#X connect 0 0 3 0;
#X connect 1 0 2 0;
#X connect 2 0 0 0;
#X connect 4 0 3 0;
#X connect 5 0 6 0;
#X connect 6 0 7 0;
#X connect 6 0 11 0;
#X connect 7 0 8 1;
#X connect 8 0 10 0;
#X connect 9 0 11 0;
#X connect 10 0 9 0;
#X connect 12 0 15 0;
#X connect 13 0 14 1;
#X connect 14 0 20 0;
#X connect 17 0 19 0;
#X connect 17 1 16 0;
#X connect 18 0 17 0;
#X connect 19 0 15 0;
#X connect 19 0 13 0;
#X connect 20 0 12 0;
#X connect 21 0 23 0;
#X connect 23 0 24 0;
#X connect 23 0 22 0;
#X connect 24 0 26 1;
#X connect 25 0 22 0;
#X connect 26 0 25 0;
#X connect 27 0 28 0;
#X connect 28 0 29 0;
#X connect 28 0 31 0;
#X connect 29 0 32 1;
#X connect 30 0 31 0;
#X connect 32 0 30 0;
#X restore 384 642 pd plot;
#N canvas 232 59 265 183 output 0;
#X obj 66 111 dac~;
#X obj 90 39 inlet~;
#X obj 115 114 throw~ \$0-out;
#X connect 1 0 2 0;
#X connect 1 0 0 0;
#X connect 1 0 0 1;
#X restore 118 263 pd output;
#N canvas 232 59 265 183 output 0;
#X obj 66 111 dac~;
#X obj 90 39 inlet~;
#X obj 115 114 throw~ \$0-out;
#X connect 1 0 2 0;
#X connect 1 0 0 0;
#X connect 1 0 0 1;
#X restore 49 597 pd output;
#N canvas 0 22 450 300 (subpatch) 0;
#X array tanh 441 float 0;
#X coords 0 1.1 440 -1.1 200 140 1;
#X restore 486 2 graph;
#X obj 487 3 cnv 15 198 138 empty empty empty 20 12 0 14 -204786 -66577
0;
#X text 470 -1 1;
#X text 464 126 -1;
#X text 471 61 0;
#X text 475 143 -7.6;
#X text 671 144 7.6;
#X text 581 141 0;
#N canvas 0 22 450 300 (subpatch) 0;
#X array sin 441 float 0;
#X coords 0 1.1 440 -1.1 200 140 1;
#X restore 487 171 graph;
#X obj 488 172 cnv 15 198 138 empty empty empty 20 12 0 14 -142952
-66577 0;
#X text 473 165 1;
#X text 467 294 -1;
#X text 473 229 0;
#X text 582 310 0;
#X text 679 311 1;
#X text 477 311 -1;
#X msg 144 491 \$1 100;
#X msg 190 154 \$1 50;
#X obj 49 560 sin~;
#X obj 813 531 cnv 15 100 40 empty empty empty 20 12 0 14 -233017 -66577
0;
#X text 861 543 Função;
#X obj 827 466 osc~ 100;
#X obj 827 502 *~;
#X obj 898 505 line~;
#X obj 901 437 hsl 128 15 0 4 0 0 v empty empty -2 -8 0 10 -261234
-1 -1 0 1;
#X obj 898 459 nbx 5 14 -1e+37 1e+37 0 0 empty empty empty 0 -8 0 10
-261234 -1 -1 0 256;
#N canvas 232 59 430 371 output 0;
#X obj 66 193 dac~;
#X obj 115 196 throw~ \$0-out;
#X obj 128 69 r v;
#X obj 128 97 > 0;
#X msg 128 119 \$1 10;
#X obj 128 143 line~;
#X obj 90 122 *~;
#X obj 90 39 inlet~;
#X connect 2 0 3 0;
#X connect 3 0 4 0;
#X connect 4 0 5 0;
#X connect 5 0 6 1;
#X connect 6 0 1 0;
#X connect 6 0 0 1;
#X connect 6 0 0 0;
#X connect 7 0 6 0;
#X restore 827 619 pd output;
#X msg 898 480 \$1 100;
#X obj 827 544 cos~;
#N canvas 0 22 450 300 (subpatch) 0;
#X array cos 441 float 0;
#X coords 0 1.1 440 -1.1 200 140 1;
#X restore 483 509 graph;
#X obj 484 510 cnv 15 198 138 empty empty empty 20 12 0 14 -134567
-66577 0;
#X text 469 503 1;
#X text 463 632 -1;
#X text 469 567 0;
#X text 578 648 0;
#X text 675 649 1;
#X text 473 649 -1;
#X obj 827 590 hip~ 5;
#X obj 49 472 osc~ 100;
#X text 757 325 Outra opção é usarmos o objeto [cos~]. Ele soa diferente
e possui um comportamento distinto que [sin~] como waveshaper.;
#X text 757 351 Por exemplo \, um valor de amplitude de zero gera um
valor de 1 \, ou ainda um DC Offset. É comum \, aliás \, a geração
de DC Offset em waveshaping e podemos filtrar o componente DC com um
passa alta \, já que o componente DC é uma frequência de 0Hz.;
#X text 874 587 <= filtra DC Offset (filtro Passa Alta);
#X text 41 296 Nosso outro exemplo é com a função Seno. O objeto [sin~]
retorna a função seno para valores de 0 a 1 \, mas também funciona
para valores de 0 a -1 ou acima de -1 e 1 \, porque ele faz um "wrapping"
automático. Isso significa que podemos dar um ganho acima de 1 e não
haverá clipping \, pois a função está em "loop". Mais especificamente
\, note que a forma de onda rebate (wavefolding) sempre que chega ao
valor máximo. Neste exemplo temos um controle de amplitude que multiplica
por 10 - ou seja \, repete a função até 20 vezes!;
#X obj 809 159 cnv 15 100 40 empty empty empty 20 12 0 14 -233017 -66577
0;
#X obj 822 120 *~;
#X obj 885 128 line~;
#X obj 888 60 hsl 128 15 0 1 0 0 empty empty empty -2 -8 0 10 -261234
-1 -1 0 1;
#X obj 885 82 nbx 5 14 -1e+37 1e+37 0 0 empty empty empty 0 -8 0 10
-261234 -1 -1 0 256;
#N canvas 232 59 265 183 output 0;
#X obj 66 111 dac~;
#X obj 90 39 inlet~;
#X obj 115 114 throw~ \$0-out;
#X connect 1 0 2 0;
#X connect 1 0 0 0;
#X connect 1 0 0 1;
#X restore 822 265 pd output;
#N canvas 0 22 450 300 (subpatch) 0;
#X array asin 441 float 0;
#X coords 0 1.57 440 -1.57 200 140 1;
#X restore 484 341 graph;
#X obj 485 342 cnv 15 198 138 empty empty empty 20 12 0 14 -142952
-66577 0;
#X text 470 399 0;
#X text 579 480 0;
#X text 676 481 1;
#X text 474 481 -1;
#X msg 885 103 \$1 100;
#X obj 952 225 pi;
#X obj 952 259 v pi;
#X obj 822 172 asin~;
#X obj 952 195 loadbang;
#X obj 822 226 expr~ $v1 / (pi/2);
#X text 450 335 pi/2;
#X text 444 464 -pi/2;
#X text 756 19 Já a função "asin" é capaz de tranformar senóides em
ondas triangulares.;
#X obj 822 84 osc~ 200;
#X text 46 12 Agora \, usamos objetos trigonométricos como função de
transferência em vez de uma tabela. O [tanh~] já foi apresentado como
um objeto que faz um "soft clipping". Ele devolve valores de -1 a 1
para um sinal de entrada que vai de -7.6 a 7.6 - a partir desse valor
haverá um "hard clipping".;
#X connect 8 0 13 0;
#X connect 9 0 8 1;
#X connect 10 0 11 0;
#X connect 11 0 39 0;
#X connect 13 0 20 0;
#X connect 14 0 8 0;
#X connect 15 0 40 0;
#X connect 16 0 15 1;
#X connect 17 0 18 0;
#X connect 18 0 38 0;
#X connect 38 0 16 0;
#X connect 39 0 9 0;
#X connect 40 0 21 0;
#X connect 43 0 44 0;
#X connect 44 0 50 0;
#X connect 45 0 44 1;
#X connect 46 0 47 0;
#X connect 47 0 49 0;
#X connect 49 0 45 0;
#X connect 50 0 59 0;
#X connect 59 0 48 0;
#X connect 60 0 15 0;
#X connect 66 0 80 0;
#X connect 67 0 66 1;
#X connect 68 0 69 0;
#X connect 69 0 77 0;
#X connect 77 0 67 0;
#X connect 78 0 79 0;
#X connect 80 0 82 0;
#X connect 81 0 78 0;
#X connect 82 0 70 0;
#X connect 86 0 66 0;
