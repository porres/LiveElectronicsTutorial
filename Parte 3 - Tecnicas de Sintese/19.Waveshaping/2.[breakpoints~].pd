#N canvas 181 23 784 680 10;
#X obj 67 236 tof/breakpoints~;
#X obj 85 130 loadbang;
#X obj 65 42 osc~ 440;
#X obj 143 401 hsl 128 15 0 1 0 0 empty empty ganho -2 -6 0 10 -203904
-1 -1 0 0;
#N canvas 232 59 524 385 ganho 0;
#X obj 355 196 *~;
#X obj 343 228 dac~;
#X obj 384 166 line~;
#X msg 384 140 \$1 10;
#X obj 384 114 pow 4;
#X obj 384 87 inlet;
#X obj 324 48 inlet~;
#X obj 135 135 metro 441;
#X obj 135 84 loadbang;
#X obj 135 111 tgl 15 0 empty empty empty 17 7 0 10 -203904 -1 -1 1
1;
#X msg 58 166 \; pd dsp 1;
#X obj 205 190 tabwrite~ breakpoints;
#X connect 0 0 1 0;
#X connect 0 0 1 1;
#X connect 2 0 0 1;
#X connect 3 0 2 0;
#X connect 4 0 3 0;
#X connect 5 0 4 0;
#X connect 6 0 0 0;
#X connect 6 0 11 0;
#X connect 7 0 11 0;
#X connect 8 0 9 0;
#X connect 8 0 10 0;
#X connect 9 0 7 0;
#X restore 65 425 pd ganho;
#X obj 68 481 cnv 15 198 138 empty empty empty 20 12 0 14 -203904 -66577
0;
#N canvas 0 22 450 300 (subpatch) 0;
#X array breakpoints 441 float 1;
#A 0 -0.141815 -0.216187 -0.290802 -0.365372 -0.43959 -0.482803 -0.442307
-0.402466 -0.363449 -0.325424 -0.288483 -0.252838 -0.313431 -0.382523
-0.44809 -0.509857 -0.567581 -0.621033 -0.670029 -0.714371 -0.753876
-0.788391 -0.817764 -0.841904 -0.860703 -0.874115 -0.88208 -0.884567
-0.881561 -0.873077 -0.859146 -0.839813 -0.815155 -0.785294 -0.750366
-0.710464 -0.665787 -0.616455 -0.562744 -0.504791 -0.442856 -0.377182
-0.308029 -0.235672 -0.268311 -0.304657 -0.342072 -0.380432 -0.419601
-0.459381 -0.430573 -0.35585 -0.280838 -0.205856 -0.131165 -0.0570984
0.0160828 0.0880737 0.158615 0.227386 0.294189 0.358688 0.420685 0.485413
0.567032 0.643997 0.716003 0.782776 0.844009 0.899506 0.949051 0.992447
1.02951 1.06012 1.08415 1.1015 1.11212 1.11594 1.11296 1.1032 1.08669
1.06351 1.03375 0.997543 0.955002 0.906311 0.851654 0.791245 0.725327
0.654205 0.578094 0.49733 0.423721 0.362106 0.297989 0.231598 0.163193
0.0930634 0.0214539 -0.0513306 -0.124985 -0.199265 -0.273849 -0.34845
-0.422775 -0.492081 -0.451462 -0.411453 -0.372253 -0.333984 -0.296783
-0.260834 -0.297256 -0.367142 -0.433517 -0.49617 -0.554825 -0.609283
-0.659286 -0.704697 -0.745331 -0.780975 -0.811539 -0.836884 -0.856918
-0.871552 -0.880768 -0.884476 -0.882706 -0.875473 -0.862762 -0.844666
-0.821228 -0.792557 -0.758743 -0.719971 -0.676346 -0.628052 -0.575317
-0.518311 -0.457275 -0.392441 -0.324036 -0.25238 -0.260208 -0.29628
-0.333481 -0.371643 -0.410645 -0.450287 -0.447464 -0.372849 -0.297882
-0.22287 -0.148102 -0.0738678 -0.000457764 0.0718384 0.142715 0.211945
0.279205 0.344254 0.406845 0.466705 0.548889 0.626938 0.700089 0.768066
0.830597 0.887436 0.938339 0.983139 1.02165 1.05374 1.07928 1.09814
1.11031 1.11568 1.11424 1.10602 1.09103 1.06937 1.04109 1.00633 0.96521
0.917908 0.864594 0.805496 0.740799 0.670822 0.59581 0.516068 0.437332
0.376358 0.312775 0.246887 0.178925 0.109146 0.0378571 -0.0346832 -0.108185
-0.182343 -0.256882 -0.331497 -0.405914 -0.479828 -0.460632 -0.420486
-0.381073 -0.342575 -0.30513 -0.26889 -0.280914 -0.351532 -0.418747
-0.482269 -0.541855 -0.59729 -0.648331 -0.694794 -0.736511 -0.773315
-0.805023 -0.831589 -0.852844 -0.868713 -0.87915 -0.884125 -0.883591
-0.877579 -0.866119 -0.849243 -0.827011 -0.79953 -0.766876 -0.729202
-0.686676 -0.639435 -0.587677 -0.531631 -0.471466 -0.407471 -0.339874
-0.268951 -0.252182 -0.287979 -0.324921 -0.362885 -0.401703 -0.441223
-0.46434 -0.389832 -0.314926 -0.239899 -0.165039 -0.0906525 -0.0170441
0.0555267 0.126755 0.196365 0.264114 0.329697 0.392853 0.453369 0.530518
0.609619 0.683899 0.753082 0.816864 0.875031 0.927307 0.973526 1.01349
1.04703 1.07405 1.09445 1.10812 1.11504 1.11516 1.10849 1.09506 1.07489
1.0481 1.0148 0.975113 0.929184 0.877228 0.819412 0.755997 0.687195
0.613297 0.534607 0.451431 0.390457 0.327454 0.262054 0.194534 0.125168
0.054184 -0.0180817 -0.0914001 -0.165421 -0.239914 -0.314529 -0.389023
-0.463074 -0.469849 -0.429535 -0.389954 -0.351242 -0.313538 -0.277008
-0.26442 -0.33577 -0.403778 -0.46817 -0.528671 -0.585052 -0.637115
-0.684647 -0.727448 -0.765366 -0.798279 -0.825989 -0.848465 -0.865585
-0.877274 -0.883469 -0.884201 -0.879425 -0.869202 -0.853546 -0.83252
-0.806229 -0.774734 -0.738205 -0.696762 -0.650574 -0.599838 -0.544724
-0.485474 -0.422348 -0.355545 -0.285339 -0.244217 -0.279739 -0.316437
-0.354187 -0.392807 -0.43219 -0.472137 -0.406815 -0.33197 -0.256943
-0.182022 -0.107513 -0.0336914 0.0391388 0.110703 0.18071 0.248886
0.314987 0.378723 0.43985 0.511887 0.592056 0.667465 0.737823 0.802856
0.862305 0.915955 0.963562 1.00496 1.03998 1.06851 1.09041 1.10562
1.11406 1.11572 1.1106 1.09869 1.08008 1.05479 1.02293 0.984695 0.94017
0.889557 0.833038 0.770874 0.703278 0.630554 0.552902 0.470718 0.404419
0.34198 0.2771 0.210068 0.141083 0.0704346 -0.0015564 -0.0746613 -0.14856
-0.222961 -0.297577 -0.372116 -0.446304 -0.479095 -0.438644 -0.39888
-0.359955 -0.322006 -0.285202 -0.249664 -0.319839 -0.388641 -0.453857
-0.515274 -0.572632 -0.625702 -0.674271 -0.718155 -0.757202 -0.791245
-0.82016 -0.843826 -0.862167 -0.875092 -0.882553 -0.884521 -0.881012
-0.872009 -0.857574 -0.837769 -0.812653 -0.782349 -0.746964 -0.706619
-0.661499 -0.611771 -0.557632 -0.499298;
#X coords 0 1.1 440 -1.1 200 140 1;
#X restore 67 480 graph;
#X text 53 475 1;
#X text 47 577 -1;
#X text 53 542 0;
#X msg 85 156 -1 1 1;
#X msg 167 138 -0.75 0.25 -0.75 0.5 0.75 0.25 0.75;
#X text 18 159 linear;
#X text 391 138 clipping;
#X text 335 42 Neste exemplo usamos o gerador de envelope [breakpoints~]
como função de transferência. Precisamos só ajustar o sinal entre 0
e 1 para fazer a leitura do envelope como um waveshaper.;
#X msg 188 199 -1 0.5 -1 0 1 0.5 1;
#X obj 459 559 expr~ if ($v1 > 0 \, 1 \, -1);
#X text 325 245 O diveritdo desse gerador de envelope é que podemos
clicar nele e desenhar com facilidade. Brinque à vontade. Podemos gerar
também os evelopes/funções a partir da sintaxe de mansagens já apresentada.
;
#X msg 165 167 -1 0.135 -0.314 0.12 0.06 0.215 0.6 0.215 0.87 0.3 1
;
#X text 495 167 parabola;
#X text 327 313 Neste exemplo temos a função linear \, que não altera
em nada o sinal \, uma de clipping que já vimos \, uma chamada parábola
e \, por fim \, uma quadrada.;
#X text 316 196 quadrada;
#X obj 459 535 readsf~;
#X obj 459 485 loadbang;
#X obj 443 590 output~;
#X text 328 363 É interessante ressaltar o exemplo da função quadrada.
Ela permite apenas dois valores (-1 e 1). É possível emular esse efeito
com uma condicional dentro de um [expr~] como abaixo. Veja que interessante
é passar qualquer sinal por ele \, como a qualidade tonal ainda permanece
\, apesar do sinal ficar bem distorcido.;
#X obj 65 71 *~;
#X obj 131 71 line~;
#X msg 131 46 \$1 10;
#X obj 134 23 hsl 128 15 0 1 0 0 empty empty empty -2 -8 0 10 -232576
-1 -1 12700 1;
#X obj 65 396 hip~ 5;
#X obj 65 98 expr~ $v1 * 0.5 + 0.5;
#X msg 459 510 open ../../samples/bubul.wav \, 1;
#X connect 0 0 30 0;
#X connect 1 0 10 0;
#X connect 2 0 26 0;
#X connect 3 0 4 1;
#X connect 10 0 0 0;
#X connect 11 0 0 0;
#X connect 15 0 0 0;
#X connect 16 0 24 0;
#X connect 16 0 24 1;
#X connect 18 0 0 0;
#X connect 22 0 16 0;
#X connect 22 1 32 0;
#X connect 23 0 32 0;
#X connect 26 0 31 0;
#X connect 27 0 26 1;
#X connect 28 0 27 0;
#X connect 29 0 28 0;
#X connect 30 0 4 0;
#X connect 31 0 0 0;
#X connect 32 0 22 0;
