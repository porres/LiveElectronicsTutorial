#N canvas 197 130 1037 566 10;
#X obj 541 455 output~;
#X obj 157 383 +~;
#X obj 157 409 +~;
#X obj 234 407 *~;
#X obj 172 354 *~;
#X obj 80 340 *~;
#X obj 836 416 s \$0-feedback;
#X obj 716 384 s \$0-feedforward;
#X obj 533 334 s \$0-del-time;
#X obj 234 245 r \$0-del-time;
#X obj 80 228 r~ \$0-in;
#X obj 603 138 s~ \$0-in;
#X obj 189 449 delwrite~ \$0-fb 1000;
#X obj 234 366 vd~ \$0-fb;
#X obj 172 311 vd~ \$0-ff;
#X obj 91 260 delwrite~ \$0-ff 1000;
#X obj 564 421 comb~ 1000 10 1 1 0.9;
#X text 81 27 O [comb~] é um Filtro de Pente (Comb Filter) \, cuja
teoria será devidamente apresenta somente na Seção de Filtros-II.;
#X obj 603 102 readsf~;
#X obj 603 45 loadbang;
#X obj 426 299 r~ \$0-in;
#X text 83 66 Sua base \, entretanto \, consiste apenas em duas linhas
de delay - uma feedforward e outra em feedback. Por esse motivo \,
alguns dos processamentos que veremos implementados a partir de delays
são possíveis de serem implementados no [comb~]!;
#X text 87 149 Vejamos a estrutura de um Filtro Pente implementado
a partir de objetos de delay abaixo.;
#X obj 234 272 nbx 5 14 -1e+37 1e+37 0 0 empty empty empty 0 -8 0 10
-204800 -1 -1 637.795 256;
#X obj 245 310 r \$0-feedforward;
#X obj 306 355 r \$0-feedback;
#X obj 245 334 nbx 5 14 -1e+37 1e+37 0 0 empty empty empty 0 -8 0 10
-261682 -1 -1 -0.92126 256;
#X obj 306 381 nbx 5 14 -1e+37 1e+37 0 0 empty empty empty 0 -8 0 10
-262130 -1 -1 -0.370079 256;
#X obj 95 321 nbx 5 14 -1e+37 1e+37 0 0 empty empty empty 0 -8 0 10
-204786 -1 -1 -0.76378 256;
#X obj 95 298 r \$0-ganho;
#X obj 501 310 nbx 5 14 -1e+37 1e+37 0 0 empty empty empty 0 -8 0 10
-204800 -1 -1 637.795 256;
#X obj 836 392 nbx 5 14 -1e+37 1e+37 0 0 empty empty empty 0 -8 0 10
-262130 -1 -1 -0.370079 256;
#X obj 710 361 nbx 5 14 -1e+37 1e+37 0 0 empty empty empty 0 -8 0 10
-261682 -1 -1 -0.92126 256;
#X text 289 271 del-time;
#X text 304 332 feedforward;
#X text 365 380 feedback;
#X text 554 187 Vejamos agora a mesma estrutura no objeto [comb~].
Seus argumentos são: tempo máximo de delay \, delay em ms e coeficientes
de ganho \, feedforward e feedback. Compare os resultados.;
#X obj 504 288 hsl 128 15 0 1000 0 1 empty empty empty -2 -8 0 10 -204800
-1 -1 8100 1;
#X text 540 287 del-time;
#X obj 638 357 s \$0-ganho;
#X obj 625 333 nbx 5 14 -1e+37 1e+37 0 0 empty empty empty 0 -8 0 10
-204786 -1 -1 -0.76378 256;
#X obj 628 311 hsl 128 15 -1 1 0 1 empty empty empty -2 -8 0 10 -204786
-1 -1 1500 1;
#X text 675 309 ganho;
#X obj 713 340 hsl 128 15 -1 1 0 1 empty empty empty -2 -8 0 10 -261682
-1 -1 500 1;
#X text 744 339 feedforward;
#X obj 840 374 hsl 128 15 -1 1 0 1 empty empty empty -2 -8 0 10 -262130
-1 -1 4000 1;
#X text 876 373 feedback;
#X obj 124 480 output~;
#X text 665 464 Valores negativos de feedforward e feedback invertem
a polaridade.;
#X msg 603 70 open ../../../samples/guitar.wav \, 1;
#X connect 1 0 2 0;
#X connect 2 0 12 0;
#X connect 2 0 47 1;
#X connect 2 0 47 0;
#X connect 3 0 2 1;
#X connect 4 0 1 1;
#X connect 5 0 1 0;
#X connect 9 0 23 0;
#X connect 10 0 5 0;
#X connect 10 0 15 0;
#X connect 13 0 3 0;
#X connect 14 0 4 0;
#X connect 16 0 0 1;
#X connect 16 0 0 0;
#X connect 18 0 11 0;
#X connect 18 1 49 0;
#X connect 19 0 49 0;
#X connect 20 0 16 0;
#X connect 23 0 14 0;
#X connect 23 0 13 0;
#X connect 24 0 26 0;
#X connect 25 0 27 0;
#X connect 26 0 4 1;
#X connect 27 0 3 1;
#X connect 28 0 5 1;
#X connect 29 0 28 0;
#X connect 30 0 8 0;
#X connect 30 0 16 1;
#X connect 31 0 16 4;
#X connect 31 0 6 0;
#X connect 32 0 16 3;
#X connect 32 0 7 0;
#X connect 37 0 30 0;
#X connect 40 0 39 0;
#X connect 40 0 16 2;
#X connect 41 0 40 0;
#X connect 43 0 32 0;
#X connect 45 0 31 0;
#X connect 49 0 18 0;
